{"version":3,"sources":["src/services/ant-design-pro/login.ts","node_modules/_@ant-design_icons-svg@4.4.2@@ant-design/icons-svg/es/asn/LockOutlined.js","node_modules/_@ant-design_icons@4.8.3@@ant-design/icons/es/icons/LockOutlined.js","node_modules/_@ant-design_icons-svg@4.4.2@@ant-design/icons-svg/es/asn/MobileOutlined.js","node_modules/_@ant-design_icons@4.8.3@@ant-design/icons/es/icons/MobileOutlined.js","src/pages/User/Login/index.tsx"],"sourcesContent":["// @ts-ignore\r\n/* eslint-disable */\r\nimport { request } from '@umijs/max';\r\n\r\n/** 发送验证码 POST /api/login/captcha */\r\nexport async function getFakeCaptcha(\r\n  params: {\r\n    // query\r\n    /** 手机号 */\r\n    phone?: string;\r\n  },\r\n  options?: { [key: string]: any },\r\n) {\r\n  return request<API.FakeCaptcha>('/api/login/captcha', {\r\n    method: 'GET',\r\n    params: {\r\n      ...params,\r\n    },\r\n    ...(options || {}),\r\n  });\r\n}\r\n","// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(LockOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'LockOutlined';\n}\nexport default RefIcon;","// This icon file is generated automatically.\nvar MobileOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M744 62H280c-35.3 0-64 28.7-64 64v768c0 35.3 28.7 64 64 64h464c35.3 0 64-28.7 64-64V126c0-35.3-28.7-64-64-64zm-8 824H288V134h448v752zM472 784a40 40 0 1080 0 40 40 0 10-80 0z\" } }] }, \"name\": \"mobile\", \"theme\": \"outlined\" };\nexport default MobileOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MobileOutlinedSvg from \"@ant-design/icons-svg/es/asn/MobileOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar MobileOutlined = function MobileOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MobileOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(MobileOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'MobileOutlined';\n}\nexport default RefIcon;","import { Footer } from '@/components';\r\nimport { login } from '@/services/ant-design-pro/api';\r\nimport { getFakeCaptcha } from '@/services/ant-design-pro/login';\r\nimport {\r\n  AlipayCircleOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  TaobaoCircleOutlined,\r\n  UserOutlined,\r\n  WeiboCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  LoginForm,\r\n  ProFormCaptcha,\r\n  ProFormCheckbox,\r\n  ProFormText,\r\n} from '@ant-design/pro-components';\r\nimport { FormattedMessage, Helmet, history, SelectLang, useIntl, useModel } from '@umijs/max';\r\nimport { Alert, message, Tabs } from 'antd';\r\nimport { createStyles } from 'antd-style';\r\nimport React, { useState } from 'react';\r\nimport { flushSync } from 'react-dom';\r\nimport Settings from '../../../../config/defaultSettings';\r\n\r\nconst useStyles = createStyles(({ token }) => {\r\n  return {\r\n    action: {\r\n      marginLeft: '8px',\r\n      color: 'rgba(0, 0, 0, 0.2)',\r\n      fontSize: '24px',\r\n      verticalAlign: 'middle',\r\n      cursor: 'pointer',\r\n      transition: 'color 0.3s',\r\n      '&:hover': {\r\n        color: token.colorPrimaryActive,\r\n      },\r\n    },\r\n    lang: {\r\n      width: 42,\r\n      height: 42,\r\n      lineHeight: '42px',\r\n      position: 'fixed',\r\n      right: 16,\r\n      borderRadius: token.borderRadius,\r\n      ':hover': {\r\n        backgroundColor: token.colorBgTextHover,\r\n      },\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n      backgroundImage:\r\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\r\n      backgroundSize: '100% 100%',\r\n    },\r\n  };\r\n});\r\n\r\nconst ActionIcons = () => {\r\n  const { styles } = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AlipayCircleOutlined key=\"AlipayCircleOutlined\" className={styles.action} />\r\n      <TaobaoCircleOutlined key=\"TaobaoCircleOutlined\" className={styles.action} />\r\n      <WeiboCircleOutlined key=\"WeiboCircleOutlined\" className={styles.action} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Lang = () => {\r\n  const { styles } = useStyles();\r\n\r\n  return (\r\n    <div className={styles.lang} data-lang>\r\n      {SelectLang && <SelectLang />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginMessage: React.FC<{\r\n  content: string;\r\n}> = ({ content }) => {\r\n  return (\r\n    <Alert\r\n      style={{\r\n        marginBottom: 24,\r\n      }}\r\n      message={content}\r\n      type=\"error\"\r\n      showIcon\r\n    />\r\n  );\r\n};\r\n\r\nconst Login: React.FC = () => {\r\n  const [userLoginState, setUserLoginState] = useState < API.LoginResult > ({});\r\n  const [type, setType] = useState < string > ('account');\r\n  const { initialState, setInitialState } = useModel('@@initialState');\r\n  const { styles } = useStyles();\r\n  const intl = useIntl();\r\n\r\n  const fetchUserInfo = async () => {\r\n    const userInfo = await initialState?.fetchUserInfo?.();\r\n    if (userInfo) {\r\n      flushSync(() => {\r\n        setInitialState((s) => ({\r\n          ...s,\r\n          currentUser: userInfo,\r\n        }));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values: API.LoginParams) => {\r\n    try {\r\n      // 登录\r\n      let msg = {};\r\n      if (!1) {\r\n        console.log('111', 111);\r\n        const msg = await login({ ...values, type });\r\n      } else {\r\n        msg = {\r\n          // \"status\": \"error\",\r\n          // \"currentAuthority\": \"guest\"\r\n          \"status\": \"ok\",\r\n          \"currentAuthority\": \"admin\",\r\n          \"type\": \"account\",\r\n\r\n        };\r\n      }\r\n      if (msg.status === 'ok') {\r\n        const defaultLoginSuccessMessage = intl.formatMessage({\r\n          id: 'pages.login.success',\r\n          defaultMessage: '登录成功！',\r\n        });\r\n        message.success(defaultLoginSuccessMessage);\r\n        await fetchUserInfo();\r\n        const urlParams = new URL(window.location.href).searchParams;\r\n        console.log(urlParams);\r\n\r\n        history.push(urlParams.get('redirect') || '/');\r\n        return;\r\n      }\r\n      console.log(msg);\r\n      // 如果失败去设置用户错误信息\r\n      setUserLoginState(msg);\r\n    } catch (error) {\r\n      const defaultLoginFailureMessage = intl.formatMessage({\r\n        id: 'pages.login.failure',\r\n        defaultMessage: '登录失败，请重试！',\r\n      });\r\n      console.log(error);\r\n      message.error(defaultLoginFailureMessage);\r\n    }\r\n  };\r\n  const { status, type: loginType } = userLoginState;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Helmet>\r\n        <title>\r\n          {intl.formatMessage({\r\n            id: 'menu.login',\r\n            defaultMessage: '登录页',\r\n          })}\r\n          {Settings.title && ` - ${Settings.title}`}\r\n        </title>\r\n      </Helmet>\r\n      <Lang />\r\n      <div\r\n        style={{\r\n          flex: '1',\r\n          padding: '32px 0',\r\n        }}\r\n      >\r\n        <LoginForm\r\n          contentStyle={{\r\n            minWidth: 280,\r\n            maxWidth: '75vw',\r\n          }}\r\n          logo={<img alt=\"logo\" src=\"/logo.svg\" />}\r\n          title=\"Ant Design\"\r\n          subTitle={intl.formatMessage({ id: 'pages.layouts.userLayout.title' })}\r\n          initialValues={{\r\n            autoLogin: true,\r\n            username: 'admin',\r\n            password: 'ant.design',\r\n          }}\r\n          // actions={[\r\n          //   <FormattedMessage\r\n          //     key=\"loginWith\"\r\n          //     id=\"pages.login.loginWith\"\r\n          //     defaultMessage=\"其他登录方式\"\r\n          //   />,\r\n          //   <ActionIcons key=\"icons\" />,\r\n          // ]}\r\n          onFinish={async (values) => {\r\n            await handleSubmit(values);\r\n          }}\r\n        >\r\n          <Tabs\r\n            activeKey={type}\r\n            onChange={setType}\r\n            centered\r\n            items={[\r\n              {\r\n                key: 'account',\r\n                label: intl.formatMessage({\r\n                  id: 'pages.login.accountLogin.tab',\r\n                  defaultMessage: '账户密码登录',\r\n                }),\r\n              },\r\n              {\r\n                key: 'mobile',\r\n                label: intl.formatMessage({\r\n                  id: 'pages.login.phoneLogin.tab',\r\n                  defaultMessage: '手机号登录',\r\n                }),\r\n              },\r\n            ]}\r\n          />\r\n\r\n          {status === 'error' && loginType === 'account' && (\r\n            <LoginMessage\r\n              content={intl.formatMessage({\r\n                id: 'pages.login.accountLogin.errorMessage',\r\n                defaultMessage: '账户或密码错误(admin/ant.design)',\r\n              })}\r\n            />\r\n          )}\r\n          {type === 'account' && (\r\n            <>\r\n              <ProFormText\r\n                name=\"username\"\r\n                fieldProps={{\r\n                  size: 'large',\r\n                  prefix: <UserOutlined />,\r\n                }}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'pages.login.username.placeholder',\r\n                  defaultMessage: '用户名: admin or user',\r\n                })}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.username.required\"\r\n                        defaultMessage=\"请输入用户名!\"\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n              <ProFormText.Password\r\n                name=\"password\"\r\n                fieldProps={{\r\n                  size: 'large',\r\n                  prefix: <LockOutlined />,\r\n                }}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'pages.login.password.placeholder',\r\n                  defaultMessage: '密码: ant.design',\r\n                })}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.password.required\"\r\n                        defaultMessage=\"请输入密码！\"\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {status === 'error' && loginType === 'mobile' && <LoginMessage content=\"验证码错误\" />}\r\n          {type === 'mobile' && (\r\n            <>\r\n              <ProFormText\r\n                fieldProps={{\r\n                  size: 'large',\r\n                  prefix: <MobileOutlined />,\r\n                }}\r\n                name=\"mobile\"\r\n                placeholder={intl.formatMessage({\r\n                  id: 'pages.login.phoneNumber.placeholder',\r\n                  defaultMessage: '手机号',\r\n                })}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.phoneNumber.required\"\r\n                        defaultMessage=\"请输入手机号！\"\r\n                      />\r\n                    ),\r\n                  },\r\n                  {\r\n                    pattern: /^1\\d{10}$/,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.phoneNumber.invalid\"\r\n                        defaultMessage=\"手机号格式错误！\"\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n              <ProFormCaptcha\r\n                fieldProps={{\r\n                  size: 'large',\r\n                  prefix: <LockOutlined />,\r\n                }}\r\n                captchaProps={{\r\n                  size: 'large',\r\n                }}\r\n                placeholder={intl.formatMessage({\r\n                  id: 'pages.login.captcha.placeholder',\r\n                  defaultMessage: '请输入验证码',\r\n                })}\r\n                captchaTextRender={(timing, count) => {\r\n                  if (timing) {\r\n                    return `${count} ${intl.formatMessage({\r\n                      id: 'pages.getCaptchaSecondText',\r\n                      defaultMessage: '获取验证码',\r\n                    })}`;\r\n                  }\r\n                  return intl.formatMessage({\r\n                    id: 'pages.login.phoneLogin.getVerificationCode',\r\n                    defaultMessage: '获取验证码',\r\n                  });\r\n                }}\r\n                name=\"captcha\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: (\r\n                      <FormattedMessage\r\n                        id=\"pages.login.captcha.required\"\r\n                        defaultMessage=\"请输入验证码！\"\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n                onGetCaptcha={async (phone) => {\r\n                  const result = await getFakeCaptcha({\r\n                    phone,\r\n                  });\r\n                  if (!result) {\r\n                    return;\r\n                  }\r\n                  message.success('获取验证码成功！验证码为：1234');\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n          <div\r\n            style={{\r\n              marginBottom: 24,\r\n            }}\r\n          >\r\n            <ProFormCheckbox noStyle name=\"autoLogin\">\r\n              <FormattedMessage id=\"pages.login.rememberMe\" defaultMessage=\"自动登录\" />\r\n            </ProFormCheckbox>\r\n            <a\r\n              style={{\r\n                float: 'right',\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"pages.login.forgotPassword\" defaultMessage=\"忘记密码\" />\r\n            </a>\r\n          </div>\r\n        </LoginForm>\r\n      </div>\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":[],"mappings":"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"}